#Main: upload functions, leaves everything ready to conduct the classification of a data/MMap file
#						and to evaluate the performances
#Depending on the taxonomy desired, on alpha, on WSD

setwd('/home/igna/Desktop/Programs GBD/Classifier_Trial_GBD')
library(gdata)
library(e1071)

#Functions Upload: on upload que les fonctions non temporaires (fichiers finissant par un ~)
for(x in list.files("./Functions","[a-zA-Z]$")) source(paste("./Functions/",x,sep=""))

#MetaMap data
MMap <- read.table("/media/igna/Elements/HotelDieu/Cochrane/MetaMapBurden/Trial_Burden_Param/MMap_tot.txt")
##########################################################################################################
#Param choices: Condition Priority
#################################################################################
alpha <- (0.2)/100
wsd <- "Yes"
gamma <- 0.1
cost <- 110
#Text field: all fields equal, condition priority ou condition only
COND <- TRUE
COND_only <- FALSE
K <- 10

#Taxonomy choice
################
Tax <- "DL"
if(Tax=="RL") data <- read.table("/media/igna/Elements/HotelDieu/Cochrane/MetaMapBurden/Trial_Burden_Param/NCT_data_tot.txt")
if(Tax=="DL") data <- read.table("/media/igna/Elements/HotelDieu/Cochrane/MetaMapBurden/Trial_Burden_Param/NCT_data_tot_disag.txt")

#Data upload
L <- Data_upl(Tax)
Mgbd <- L[[1]]
Egbd <- L[[2]]
MT <- L[[3]]
MTEB <- L[[4]]
remove(L)

t0 <- proc.time()
set.seed(7212)
K_cross_valid(data,MMap,Mgbd,Egbd,MT,MTEB,K,alpha,wsd,gamma,cost,COND,COND_only)
#          [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7]
#[1,] 0.0000000        NA        NA        NA 0.7571917 0.7695541 0.7300132
#[2,] 0.1289978 0.5155332 0.5320099 0.4855410 0.7932540 0.8045780 0.7671444
#[3,] 0.1509536 0.5202023 0.5523402 0.4680001 0.7993290 0.8078856 0.7765837
t1 <- proc.time()
(t1-t0)/60
#5.4min

#Taxonomy choice
#################
Tax <- "RL"
if(Tax=="RL") data <- read.table("/media/igna/Elements/HotelDieu/Cochrane/MetaMapBurden/Trial_Burden_Param/NCT_data_tot.txt")
if(Tax=="DL") data <- read.table("/media/igna/Elements/HotelDieu/Cochrane/MetaMapBurden/Trial_Burden_Param/NCT_data_tot_disag.txt")
#Data upload
L <- Data_upl(Tax)
Mgbd <- L[[1]]
Egbd <- L[[2]]
MT <- L[[3]]
MTEB <- L[[4]]
remove(L)

t0 <- proc.time()
set.seed(7212)
K_cross_valid(data,MMap,Mgbd,Egbd,MT,MTEB,K,alpha,wsd,gamma,cost,COND,COND_only)
#          [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7]
#[1,] 0.0000000        NA        NA        NA 0.7617239 0.7638423 0.7027373
#[2,] 0.1230375 0.5057095 0.5283948 0.4761418 0.7954584 0.7946172 0.7324827
#[3,] 0.1669227 0.5012982 0.5493175 0.4372867 0.8114964 0.8041842 0.7530840
t1 <- proc.time()
(t1-t0)/60

####################################################################################
#Param choices: All text fields
####################################################################################
alpha <- (0.2)/100
wsd <- "Yes"
gamma <- 0.1
cost <- 110
#Text field: all fields equal, condition priority ou condition only
COND <- FALSE
COND_only <- FALSE
K <- 10

#Taxonomy choice
################
Tax <- "DL"
if(Tax=="RL") data <- read.table("/media/igna/Elements/HotelDieu/Cochrane/MetaMapBurden/Trial_Burden_Param/NCT_data_tot.txt")
if(Tax=="DL") data <- read.table("/media/igna/Elements/HotelDieu/Cochrane/MetaMapBurden/Trial_Burden_Param/NCT_data_tot_disag.txt")
#Data upload
L <- Data_upl(Tax)
Mgbd <- L[[1]]
Egbd <- L[[2]]
MT <- L[[3]]
MTEB <- L[[4]]
remove(L)

t0 <- proc.time()
set.seed(7212)
K_cross_valid(data,MMap,Mgbd,Egbd,MT,MTEB,K,alpha,wsd,gamma,cost,COND,COND_only)
#          [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7]
#[1,] 0.0000000        NA        NA        NA 0.7503720 0.7708852 0.7167108
#[2,] 0.1250022 0.5005388 0.5259056 0.4688938 0.7860549 0.8053822 0.7529838
#[3,] 0.1575982 0.5050520 0.5689037 0.4316221 0.7960994 0.8084986 0.7697272
t1 <- proc.time()
(t1-t0)/60
#5.4min

#Taxonomy choice
Tax <- "RL"
if(Tax=="RL") data <- read.table("/media/igna/Elements/HotelDieu/Cochrane/MetaMapBurden/Trial_Burden_Param/NCT_data_tot.txt")
if(Tax=="DL") data <- read.table("/media/igna/Elements/HotelDieu/Cochrane/MetaMapBurden/Trial_Burden_Param/NCT_data_tot_disag.txt")
#Data upload
L <- Data_upl(Tax)
Mgbd <- L[[1]]
Egbd <- L[[2]]
MT <- L[[3]]
MTEB <- L[[4]]
remove(L)

t0 <- proc.time()
set.seed(7212)
K_cross_valid(data,MMap,Mgbd,Egbd,MT,MTEB,K,alpha,wsd,gamma,cost,COND,COND_only)
#          [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7]
#[1,] 0.0000000        NA        NA        NA 0.7526813 0.7654427 0.6867770
#[2,] 0.1143841 0.5113239 0.5422657 0.4724506 0.7823418 0.7925845 0.7132524
#[3,] 0.1815276 0.4902745 0.5775799 0.4079087 0.8084302 0.8047403 0.7461310
t1 <- proc.time()
(t1-t0)/60

##############################################################################
#Param choices: NO WSD (condition priority)
##############################################################################
alpha <- (0.2)/100
wsd <- "No"
gamma <- 0.1
cost <- 110
#Text field: all fields equal, condition priority ou condition only
COND <- TRUE
COND_only <- FALSE
K <- 10

#Taxonomy choice
################
Tax <- "DL"
if(Tax=="RL") data <- read.table("/media/igna/Elements/HotelDieu/Cochrane/MetaMapBurden/Trial_Burden_Param/NCT_data_tot.txt")
if(Tax=="DL") data <- read.table("/media/igna/Elements/HotelDieu/Cochrane/MetaMapBurden/Trial_Burden_Param/NCT_data_tot_disag.txt")

#Data upload
L <- Data_upl(Tax)
Mgbd <- L[[1]]
Egbd <- L[[2]]
MT <- L[[3]]
MTEB <- L[[4]]
remove(L)

t0 <- proc.time()
set.seed(7212)
K_cross_valid(data,MMap,Mgbd,Egbd,MT,MTEB,K,alpha,wsd,gamma,cost,COND,COND_only)
#          [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7]
#[1,] 0.0000000        NA        NA        NA 0.7553028 0.7688830 0.7266843
#[2,] 0.1436424 0.4809986 0.4931671 0.4705845 0.8011627 0.8149832 0.7697860
#[3,] 0.1649316 0.4966371 0.5264438 0.4599139 0.8059888 0.8163945 0.7788680
t1 <- proc.time()
(t1-t0)/60
#3.7min

#Taxonomy choice
#################
Tax <- "RL"
if(Tax=="RL") data <- read.table("/media/igna/Elements/HotelDieu/Cochrane/MetaMapBurden/Trial_Burden_Param/NCT_data_tot.txt")
if(Tax=="DL") data <- read.table("/media/igna/Elements/HotelDieu/Cochrane/MetaMapBurden/Trial_Burden_Param/NCT_data_tot_disag.txt")
#Data upload
L <- Data_upl(Tax)
Mgbd <- L[[1]]
Egbd <- L[[2]]
MT <- L[[3]]
MTEB <- L[[4]]
remove(L)

t0 <- proc.time()
set.seed(7212)
K_cross_valid(data,MMap,Mgbd,Egbd,MT,MTEB,K,alpha,wsd,gamma,cost,COND,COND_only)
#[1,] 0.0000000        NA        NA        NA 0.7625031 0.7650579 0.7040574
#[2,] 0.1137439 0.5043092 0.5276846 0.4725245 0.7954362 0.7950889 0.7337383
#[3,] 0.1642517 0.5184793 0.5624669 0.4425480 0.8103660 0.8042541 0.7545362
t1 <- proc.time()
(t1-t0)/60

#################################################################################



labs <- 0:nrow(Mgbd)

x <- sample(1:nrow(data))
L <- split(x,ceiling(seq_along(x)/(length(x)/K)))

Ptot <- c()
t0 <- proc.time()
for(i in 1:K){
#i <- sample(1:10,1)

trdt <- data[unlist(L[-i]),]
NCTstr <- tolower(as.character(trdt$PMID))
Mtr <- droplevels(MMap[MMap$NCT%in%paste("pbky",NCTstr,sep=""),])

tsdt <- data[unlist(L[i]),]
NCTsts <- tolower(as.character(tsdt$PMID))
Mts <- droplevels(MMap[MMap$NCT%in%paste("pbky",NCTsts,sep=""),])

TR <- training(trdt,Mgbd,Egbd,Mtr,MT,MTEB,alpha,wsd,gamma,cost,COND,COND_only)

MTc <- TR[[1]]
svm_mod_wrong <- TR[[2]]
remove(TR)

CL <- classifier(tsdt,Mts,MTc,wsd,svm_mod_wrong,COND,COND_only)

PERF <- Eval_CL(tsdt, CL)

Ptot <- c(Ptot,list(PERF))
}
#5.4min pour une valeur de chaque param.
t1 <- proc.time()
(t1-t0)/60

apply(simplify2array(Ptot), c(1,2), mean)
#          [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7]
#[1,] 0.0000000        NA        NA        NA 0.7503720 0.7708852 0.7167108
#[2,] 0.1289978 0.5016443 0.5372731 0.4592461 0.7873782 0.8053079 0.7556851
#[3,] 0.1509536 0.5140155 0.5561863 0.4546052 0.7922428 0.8086489 0.7632310



















#####################################################################

table(unlist(lapply(strsplit(as.character(data$GBDnp),"&&"),length)))

table(as.numeric(unlist(strsplit(as.character(data$GBDnp),"&&"))))
Mgbd$cause_name[!1:nrow(Mgbd)%in%unique(as.numeric(unlist(strsplit(as.character(data$GBDnp),"&&"))))]
#GBDs non atteints par Emdin+JDZ

