#Function isICD
#1 si code est de forme ICD, 0 sinon
#####################################
isICD <- function(ICD){
	if(!nchar(ICD)%in%c(3,5)) return(0)
	else{
	l <- unlist(strsplit(ICD,""))
	if(nchar(ICD)==3) return(prod(c(l[1]%in%toupper(letters),l[2:3]%in%0:9)))
	else return(prod(c(l[1]%in%toupper(letters),l[c(2:3,5)]%in%0:9,l[4]==".")))
	}
}

##########################################################################################
#Funcion Guiones:
#Entra un string du type A1N1(.M1)-A2N2(.M3) y return la lista de ICDs abiertos
###########################################
Guiones <- function(x){
	#x <- "C00.2-E48.9"
	#x <- "C00.2-C48.9"

	guion <- unlist(strsplit(x, "-", fixed=TRUE))

	#limpiar guiones de espacios al lado
	guion <- gsub("[ ]+","",guion)

	#On teste si codes es ICD ou pas
	if(prod(unlist(lapply(guion,isICD)))==0) stop('not ICD code')
	if(length(guion)==1) 	return(guion)
	if(length(guion)!=2) stop('not correct guion')
	
	bas <- strsplit(guion,"")
	ll <- toupper(letters[grep(bas[[1]][1],toupper(letters)):grep(bas[[2]][1],toupper(letters))])
	
	#si plus d'une lettre
	if(length(ll)>=2){
		#on teste si terme1<terme2
		if(bas[[1]][1]>bas[[2]][1]) stop('pb ICD order')

		#si nchar bas1 = 5
		if(length(bas[[1]])==5) l0 <- paste(ll[1],paste(paste(bas[[1]][2:3],collapse=""),paste(".",as.numeric(bas[[1]][5]):9,sep=""),sep=""),sep="")
		else l0 <- paste(ll[1],paste(paste(bas[[1]][2:3],collapse=""),sep=""),sep="")

		#depuis C00
		l1 <- paste(ll[1],unlist(lapply((1+as.numeric(paste(bas[[1]][2:3],collapse=""))):99,function(i){paste(c(rep(0,1-as.numeric((i%/%10)>0)),i),collapse="")})),sep="")

		for(lt in ll[-c(1,length(ll))]){
		l1 <- c(l1,paste(lt,unlist(lapply(0:99,function(i){paste(c(rep(0,1-as.numeric((i%/%10)>0)),i),collapse="")})),sep=""))
		}

		#depuis E	
		l1 <- c(l1,paste(ll[length(ll)],unlist(lapply(0:(as.numeric(paste(bas[[2]][2:3],collapse=""))-1),function(i){paste(c(rep(0,1-as.numeric((i%/%10)>0)),i),collapse="")})),sep=""))

		#si nchar bas2 = 5
		if(length(bas[[2]])==5) l2 <- paste(ll[length(ll)],paste(paste(bas[[2]][2:3],collapse=""),paste(".",0:as.numeric(bas[[2]][5]),sep=""),sep=""),sep="")
		else l2 <- paste(ll[length(ll)],paste(paste(bas[[2]][2:3],collapse=""),sep=""),sep="")

	}

	#si une seule lettre
	else{
	#si plus d'un chiffre dans la même lettre
	if(as.numeric(paste(bas[[1]][2:3],collapse=""))<as.numeric(paste(bas[[2]][2:3],collapse=""))){
		#si nchar bas1 = 5
		if(length(bas[[1]])==5) l0 <- paste(ll[1],paste(paste(bas[[1]][2:3],collapse=""),paste(".",as.numeric(bas[[1]][5]):9,sep=""),sep=""),sep="")
		else l0 <- paste(ll[1],paste(paste(bas[[1]][2:3],collapse=""),sep=""),sep="")

		l1 <- paste(ll[1],unlist(lapply((1+as.numeric(paste(bas[[1]][2:3],collapse=""))):(as.numeric(paste(bas[[2]][2:3],collapse=""))-1),function(i){paste(c(rep(0,1-as.numeric((i%/%10)>0)),i),collapse="")})),sep="")

		#si nchar bas2 = 5
		if(length(bas[[2]])==5) l2 <- paste(ll[length(ll)],paste(paste(bas[[2]][2:3],collapse=""),paste(".",0:as.numeric(bas[[2]][5]),sep=""),sep=""),sep="")
		else l2 <- paste(ll[length(ll)],paste(paste(bas[[2]][2:3],collapse=""),sep=""),sep="")
	}
	#si un seul chiffre
	else{
		#on teste si terme1<terme2
		if(as.numeric(paste(bas[[1]][2:3],collapse=""))>as.numeric(paste(bas[[2]][2:3],collapse="")) | (length(bas[[1]])==5 & length(bas[[1]])!=5)) stop('pb ICD order')
		else{
			if(length(bas[[1]])==5){
				if(as.numeric(bas[[1]][5])>as.numeric(bas[[2]][5])) stop('pb ICD order')
				else l0 <- paste(ll[1],paste(paste(bas[[1]][2:3],collapse=""),paste(".",as.numeric(bas[[1]][5]):as.numeric(bas[[2]][5]),sep=""),sep=""),sep="")
			}
			else{
				if(length(bas[[1]])==5) stop('pb ICD order')
				else l0 <- paste(ll[1],paste(paste(bas[[1]][2:3],collapse=""),sep=""),sep="")
			}
		}
		l1 <- NULL
		l2 <- NULL
	}#else 1 chiffre
	}#else 1 lettre
return(c(l0,l1,l2))
}

#########################################################################################
#Fonction ICD_GBD
#Input: Taxonomie GBD et 1 ICD, output, GBD et Pb correspondant
###################################################################

ICD_GBD <- function(Mgbd,icds){

if(isICD(icds)==0) stop('not ICD code')

pGPE <- NA
pPbs <- NA

#Nchar = 3
if(nchar(icds)==3){

  gpe <- grep(icds,Mgbd$ICD)

  if(length(gpe)==0) pPbs <- "A0"
  else	{ if(length(gpe)==1)  { gpe_exc <- grep(icds,Mgbd$except)
				#on extrait des possibles Pinf: il n'y a qu'une occurrence de la base ICD, mais correspond uniquement à des ICD t) char = 5
				if(length(gpe_exc)==0)	{if(length(grep(paste(icds,".",sep=""),Mgbd$ICD[gpe],fixed=TRUE))>0
							    & !(icds%in%unlist(strsplit(as.character(Mgbd$ICD[gpe]),";")))) pPbs <- "Pinf1" 
							else pGPE <- gpe
							}
				#on modifie ce programme: si on a un code nchar = 3 complet, avec un except nchar = 5, nous prenons tout de même le GBD 
				else	#{if(length(gpe_exc)==1) pPbs <- "A1.1"
					# else pPbs <- "A1.2"
					#}
					{if(length(gpe_exc)==1) {	pPbs <- "A1.1"
									pGPE <- gpe	}
					 else {	pPbs <- "A1.2"
						pGPE <- gpe	}
					}
	  		      }
	  else pPbs <- "A2"
	}
}

#Nchar = 5
else {

  gpe_bas <- grep(substr(icds,1,3),Mgbd$ICD)

  if(length(gpe_bas)==0) pPbs <- "B0"
  else{
  if(length(gpe_bas)==1){gpe_bas_exc <- grep(substr(icds,1,3),Mgbd$except)
			if(length(gpe_bas_exc)==0){
				if(substr(icds,1,3)%in%unlist(strsplit(as.character(Mgbd$ICD[gpe_bas]),";"))) pGPE <- gpe_bas
				else{ 
				if(length(grep(icds,Mgbd$ICD))==1) pGPE <- gpe_bas
				else pPbs <- "B1.1"
				}
			}
			else{
			if(length(gpe_bas_exc)==1){
				if(length(grep(icds,Mgbd$except))==0){
					if(substr(icds,1,3)%in%unlist(strsplit(as.character(Mgbd$ICD[gpe_bas]),";"))) pGPE <- gpe_bas
					else{ 
					if(length(grep(icds,Mgbd$ICD))==1) pGPE <- gpe_bas
					else pPbs <- "B1.2"
					}
				}
				else{
				if(length(grep(icds,Mgbd$except))==1) pPbs <- "B1.3"
				else pPbs <- "B1.4"
				}
			}
			else pPbs <- "B1.5"
			}
  }
  else{			gpe_bas_exc <- grep(substr(icds,1,3),Mgbd$except)
			if(length(gpe_bas_exc)==0){
				if(length(grep(icds,Mgbd$ICD))==0) pPbs <- "B2.1"
				else{ 
				if(length(grep(icds,Mgbd$ICD))==1) pGPE <- grep(icds,Mgbd$ICD)
				else pPbs <- "B2.2"
				}
			}
			else{
			if(length(gpe_bas_exc)==1){
				if(length(grep(icds,Mgbd$except))==0){
					if(substr(icds,1,3)%in%unlist(strsplit(as.character(Mgbd$ICD[gpe_bas]),";"))) pGPE <- gpe_bas_exc
					else{ 
					if(length(grep(icds,Mgbd$ICD))==1) pGPE <- grep(icds,Mgbd$ICD)
					else pPbs <- "B2.3"
					}
				}
				else{
				if(length(grep(icds,Mgbd$except))==1){
					if(length(grep(icds,Mgbd$ICD))==1) pGPE <- grep(icds,Mgbd$ICD)
					else pPbs <- "B2.4"
				}
				else pPbs <- "B2.5"
				}
			}
			else pPbs <- "B3"
			}
  }
  }

}#end else nchar = 5

  return(data.frame(ICD=icds,GBD=pGPE, Pbs=pPbs))

}

