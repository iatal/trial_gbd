#This function tests, depending on the considered NCTs and the MetaMap output (MMap), on the IntraMap and Expert-based data in memory (already uploaded),
#and on the threshold alpha, if it is necessary to rerun IntraMap or to manually map concepts to GBD
#If there is no need to rerun IntraMap or Expert-based enrichment, the output is the total matrix UMLS_GBD
#This function is used for the training of the classifier

#Output = FALSE if needs IntraMap or EB enrichment
#	  + NULL
#	  + list of concepts to be mapped
#	= TRUE if no need
#	  + MTc: total table UMLS_GBD
#	  + NULL

#Needs library(gdata)
#Rq: alpha = percentage of nrow(MMap), MetaMap output using WSD and not WSD servers

Test_add_MT <- function(NCTs,MMap,MT,MTEB,alpha){

	#NCTs: liste des NCTs
	#MMap: output MetaMap pour le NCTs listés
	#MT: données UMLS+IntraMap
	#MTEB: données UMLS_GBD_manuel

	CUI <- unique(MMap$X5)

	#IntraMap checking: est-ce que tous les CUIs ont été intramappés
	#Erreur et donner liste pour IntraMap
	if(sum(!CUI%in%MT$CUIinp)!=0) {
		print(paste(c("nb trials = ", length(NCTs), ", alpha = ", alpha ,". Need running IntraMap for ",sum(!CUI%in%MT$CUIinp)," concepts"),collapse=""))
		return(list(FALSE,NULL,CUI[!CUI%in%MT$CUIinp]))
		}

	MTut <- droplevels(MT[MT$CUIinp%in%CUI,])
	gbty <- unlist(tapply(MTut$GBD,MTut$CUIinp,function(x){length(unique(x[!is.na(x)]))}))
	nogbd <- names(gbty[gbty==0])
	fnogbd <- unlist(lapply(nogbd,function(x){sum(MMap$X5==x)}))

	#Manual work checking: est-ce que tous les cui no gbd avec freq sup alpha ont ete manuellement mappés
	#Erreur et donner liste pour manuel
	if(alpha != 0 & sum(!nogbd[fnogbd>=alpha*nrow(MMap)]%in%MTEB$CUIinp) !=0) {
		print(paste(c("nb trials = ", length(NCTs), ", alpha = ", alpha ,". Need manual validation of ",sum(!nogbd[fnogbd>=alpha*nrow(MMap)]%in%MTEB$CUIinp)," concepts"),collapse=""))
		return(list(FALSE,NULL,nogbd[fnogbd>=alpha*nrow(MMap) & !nogbd%in%MTEB$CUIinp]))
	}

	MTEBfalpha <- droplevels(MTEB[MTEB$CUIinp%in%nogbd[fnogbd>=alpha*nrow(MMap)],])

	#CREATION DE MTc
	MTc <- data.frame(rbind(as.matrix(MT),as.matrix(MTEBfalpha)))
	MTc$CUIinp <- reorder(MTc$CUIinp,sort(levels(MTc$CUIinp)))

	return(list(TRUE,MTc,NULL))

}

#################################################
#This function tests if there is a need to rerun IntraMap uniquement
#It is used for the classification

Test_add_MT_classif <- function(NCTs,MMap,MTc){

	#NCTs: liste des NCTs
	#MMap: output MetaMap pour le NCTs listés
	#MTc: données UMLS_IntraMap+EB_UMLS_GBD créé pendant le training

	CUI <- unique(MMap$X5)

	#IntraMap checking: est-ce que tous les CUIs ont été intramappés
	#Erreur et donner liste pour IntraMap
	if(sum(!CUI%in%MTc$CUIinp)!=0) {
		print(paste(c("nb trials = ", length(NCTs), ". Need running IntraMap for ",sum(!CUI%in%MTc$CUIinp)," concepts"),collapse=""))
		return(list(FALSE,CUI[!CUI%in%MTc$CUIinp]))
		}

	return(list(TRUE,NULL))

}


